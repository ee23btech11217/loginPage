{"ast":null,"code":"var _jsxFileName = \"/home/mnepraj/loginPage/src/features/recruiterLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecruiterLogin() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [captcha, setCaptcha] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleCaptchaChange = value => {\n    setCaptcha(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email && password && captcha) {\n      // Your authentication logic here\n      // Verify the captcha with your backend server\n      // If captcha is verified, proceed with form submission\n    } else {\n      setErrorMessage('Please fill in all fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Recruiter Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Captcha:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          sitekey: process.env.REACT_APP_SITE_KEY,\n          onChange: handleCaptchaChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(RecruiterLogin, \"7PaFMn8izxyxVP4ck4DCZ6cm7BY=\");\n_c = RecruiterLogin;\nexport default RecruiterLogin;\nvar _c;\n$RefreshReg$(_c, \"RecruiterLogin\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","ReCAPTCHA","jsxDEV","_jsxDEV","RecruiterLogin","_s","email","setEmail","password","setPassword","captcha","setCaptcha","errorMessage","setErrorMessage","handleCaptchaChange","value","handleSubmit","e","preventDefault","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","onChange","target","required","fullWidth","margin","sitekey","process","env","REACT_APP_SITE_KEY","color","style","_c","$RefreshReg$"],"sources":["/home/mnepraj/loginPage/src/features/recruiterLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography } from '@mui/material';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\nfunction RecruiterLogin() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [captcha, setCaptcha] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleCaptchaChange = (value) => {\n        setCaptcha(value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (email && password && captcha) {\n            // Your authentication logic here\n            // Verify the captcha with your backend server\n            // If captcha is verified, proceed with form submission\n        } else {\n            setErrorMessage('Please fill in all fields.');\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h4\">Recruiter Login</Typography>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    label=\"Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    fullWidth\n                    margin=\"normal\"\n                />\n                <TextField\n                    label=\"Password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                    fullWidth\n                    margin=\"normal\"\n                />\n                <div>\n                    <Typography variant=\"subtitle1\">Captcha:</Typography>\n                    <ReCAPTCHA sitekey={process.env.REACT_APP_SITE_KEY} onChange={handleCaptchaChange} />\n                </div>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Login\n                </Button>\n                {errorMessage && <Typography style={{ color: 'red' }}>{errorMessage}</Typography>}\n            </form>\n        </div>\n    );\n}\n\nexport default RecruiterLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}