{"ast":null,"code":"import React from'react';import{Typography}from'@mui/material';import GoogleLoginButton from'./googleLogin';import{jwtDecode}from'jwt-decode';// Import jwt-decode\nimport{useNavigate}from'react-router-dom';// Import useNavigate\nimport'./Login.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Login=_ref=>{let{role}=_ref;const navigate=useNavigate();// Initialize the navigate function\nconst responseMessage=response=>{const token=response.credential;// Assuming the token is available in the response\nconst decodedToken=jwtDecode(token);// Decode the JWT token\nconst{email}=decodedToken;// Extract email from the decoded token\nconsole.log(\"\".concat(role,\" Login Success:\"),{email});navigate('/home');localStorage.setItem('email',email);};const errorMessage=error=>{console.log(\"\".concat(role,\" Login Failed:\"),error);// Handle login error\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",component:\"h2\",gutterBottom:true,className:\"login-title\",children:[role,\" Login\"]}),/*#__PURE__*/_jsx(GoogleLoginButton,{onSuccess:responseMessage,onError:errorMessage})]});};export default Login;","map":{"version":3,"names":["React","Typography","GoogleLoginButton","jwtDecode","useNavigate","jsxs","_jsxs","jsx","_jsx","Login","_ref","role","navigate","responseMessage","response","token","credential","decodedToken","email","console","log","concat","localStorage","setItem","errorMessage","error","className","children","variant","component","gutterBottom","onSuccess","onError"],"sources":["/home/mnepraj/loginPage/src/features/Login.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport { jwtDecode } from 'jwt-decode'; // Import jwt-decode\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './Login.css';\n\nconst Login = ({ role}) => {\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const responseMessage = (response) => {\n    const token = response.credential; // Assuming the token is available in the response\n    const decodedToken = jwtDecode(token); // Decode the JWT token\n    const { email } = decodedToken; // Extract email from the decoded token\n    console.log(`${role} Login Success:`, { email });\n\n      navigate('/home'); \n      localStorage.setItem('email', email);\n  };\n\n  const errorMessage = (error) => {\n    console.log(`${role} Login Failed:`, error);\n    // Handle login error\n  };\n\n  return (\n    <div className=\"login-container\">\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom className=\"login-title\">\n        {role} Login\n      </Typography>\n      <GoogleLoginButton onSuccess={responseMessage} onError={errorMessage} />\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,eAAe,CAC1C,MAAO,CAAAC,iBAAiB,KAAM,eAAe,CAC7C,OAASC,SAAS,KAAQ,YAAY,CAAE;AACxC,OAASC,WAAW,KAAQ,kBAAkB,CAAE;AAChD,MAAO,aAAa,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAErB,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAa,IAAZ,CAAEC,IAAI,CAAC,CAAAD,IAAA,CACpB,KAAM,CAAAE,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAAE;AAEhC,KAAM,CAAAS,eAAe,CAAIC,QAAQ,EAAK,CACpC,KAAM,CAAAC,KAAK,CAAGD,QAAQ,CAACE,UAAU,CAAE;AACnC,KAAM,CAAAC,YAAY,CAAGd,SAAS,CAACY,KAAK,CAAC,CAAE;AACvC,KAAM,CAAEG,KAAM,CAAC,CAAGD,YAAY,CAAE;AAChCE,OAAO,CAACC,GAAG,IAAAC,MAAA,CAAIV,IAAI,oBAAmB,CAAEO,KAAM,CAAC,CAAC,CAE9CN,QAAQ,CAAC,OAAO,CAAC,CACjBU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,KAAK,CAAC,CACxC,CAAC,CAED,KAAM,CAAAM,YAAY,CAAIC,KAAK,EAAK,CAC9BN,OAAO,CAACC,GAAG,IAAAC,MAAA,CAAIV,IAAI,mBAAkBc,KAAK,CAAC,CAC3C;AACF,CAAC,CAED,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BrB,KAAA,CAACL,UAAU,EAAC2B,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,YAAY,MAACJ,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzEhB,IAAI,CAAC,QACR,EAAY,CAAC,cACbH,IAAA,CAACN,iBAAiB,EAAC6B,SAAS,CAAElB,eAAgB,CAACmB,OAAO,CAAER,YAAa,CAAE,CAAC,EACrE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}