{"ast":null,"code":"var _jsxFileName = \"/home/mnepraj/loginPage/src/features/studentLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport HomePage from './homePage'; // Import HomePage component\nimport './studentLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentLogin() {\n  _s();\n  const [clientName, setClientName] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to manage login status\n  const navigate = useNavigate();\n  const responseMessage = response => {\n    const {\n      name\n    } = response;\n    setClientName(name);\n    setIsLoggedIn(true); // Set isLoggedIn to true after successful login\n    navigate('/home');\n  };\n  const errorMessage = error => {\n    console.log('Student Login Failed:', error);\n  };\n  useEffect(() => {\n    const storedClientName = localStorage.getItem('clientName');\n    const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedClientName && storedIsLoggedIn) {\n      setClientName(storedClientName);\n      setIsLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      className: \"student-login-title\",\n      children: \"Student Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(HomePage, {\n      clientName: clientName,\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onSuccess: responseMessage,\n      onError: errorMessage,\n      className: \"student-login-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(StudentLogin, \"o+SFAd5g8vnqQqHUdn3qxVYmhZo=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentLogin;\nexport default StudentLogin;\nvar _c;\n$RefreshReg$(_c, \"StudentLogin\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Typography","GoogleLoginButton","HomePage","jsxDEV","_jsxDEV","StudentLogin","_s","clientName","setClientName","isLoggedIn","setIsLoggedIn","navigate","responseMessage","response","name","errorMessage","error","console","log","storedClientName","localStorage","getItem","storedIsLoggedIn","className","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["/home/mnepraj/loginPage/src/features/studentLogin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport HomePage from './homePage'; // Import HomePage component\nimport './studentLogin.css';\n\nfunction StudentLogin() {\n    const [clientName, setClientName] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // State to manage login status\n    const navigate = useNavigate();\n\n    const responseMessage = (response) => {\n        const { name } = response;\n        setClientName(name);\n        setIsLoggedIn(true); // Set isLoggedIn to true after successful login\n        navigate('/home');\n    };\n\n    const errorMessage = (error) => {\n        console.log('Student Login Failed:', error);\n    };\n\n    useEffect(() => {\n        const storedClientName = localStorage.getItem('clientName');\n        const storedIsLoggedIn = localStorage.getItem('isLoggedIn');\n\n        if (storedClientName && storedIsLoggedIn) {\n            setClientName(storedClientName);\n            setIsLoggedIn(true);\n        }\n    }, []);\n\n    return (\n        <div className=\"student-login-container\">\n            <Typography variant=\"h4\" component=\"h2\" gutterBottom className=\"student-login-title\">Student Login</Typography>\n            {isLoggedIn ? (\n                <HomePage clientName={clientName} isLoggedIn={isLoggedIn} />\n            ) : (\n                <GoogleLoginButton onSuccess={responseMessage} onError={errorMessage} className=\"student-login-button\" />\n            )}\n        </div>\n    );\n}\n\nexport default StudentLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,iBAAiB,MAAM,eAAe;AAC7C,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AACnC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,eAAe,GAAIC,QAAQ,IAAK;IAClC,MAAM;MAAEC;IAAK,CAAC,GAAGD,QAAQ;IACzBL,aAAa,CAACM,IAAI,CAAC;IACnBJ,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBC,QAAQ,CAAC,OAAO,CAAC;EACrB,CAAC;EAED,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC5BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;EAC/C,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZ,MAAMsB,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC3D,MAAMC,gBAAgB,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAE3D,IAAIF,gBAAgB,IAAIG,gBAAgB,EAAE;MACtCd,aAAa,CAACW,gBAAgB,CAAC;MAC/BT,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCpB,OAAA,CAACJ,UAAU;MAACyB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACJ,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAC9GtB,UAAU,gBACPL,OAAA,CAACF,QAAQ;MAACK,UAAU,EAAEA,UAAW;MAACE,UAAU,EAAEA;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5D3B,OAAA,CAACH,iBAAiB;MAAC+B,SAAS,EAAEpB,eAAgB;MAACqB,OAAO,EAAElB,YAAa;MAACQ,SAAS,EAAC;IAAsB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3G;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACzB,EAAA,CApCQD,YAAY;EAAA,QAGAN,WAAW;AAAA;AAAAmC,EAAA,GAHvB7B,YAAY;AAsCrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}