{"ast":null,"code":"var _jsxFileName = \"/home/mnepraj/my-login-app/src/GoogleLogin.js\";\n// GoogleLogin.js\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loginSuccess, loginFailure } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = ({\n  loggedIn,\n  loginSuccess,\n  loginFailure\n}) => {\n  const onSuccess = googleUser => {\n    console.log('Logged in successfully!');\n    const profile = googleUser.getBasicProfile();\n    loginSuccess({\n      id: profile.getId(),\n      name: profile.getName(),\n      email: profile.getEmail(),\n      imageUrl: profile.getImageUrl()\n    });\n  };\n  const onFailure = error => {\n    console.log('Login failed:', error);\n    loginFailure(error);\n  };\n  const renderButton = () => {\n    if (loggedIn) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You are already logged in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else {\n      window.gapi.signin2.render('my-signin2', {\n        'scope': 'profile email',\n        'width': 200,\n        'height': 50,\n        'longtitle': true,\n        'theme': 'dark',\n        'onsuccess': onSuccess,\n        'onfailure': onFailure\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Google Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), renderButton(), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"my-signin2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleLogin;\nconst mapStateToProps = state => ({\n  loggedIn: state.loggedIn\n});\nconst mapDispatchToProps = {\n  loginSuccess,\n  loginFailure\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleLogin);\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["React","connect","loginSuccess","loginFailure","jsxDEV","_jsxDEV","GoogleLogin","loggedIn","onSuccess","googleUser","console","log","profile","getBasicProfile","id","getId","name","getName","email","getEmail","imageUrl","getImageUrl","onFailure","error","renderButton","children","fileName","_jsxFileName","lineNumber","columnNumber","window","gapi","signin2","render","_c","mapStateToProps","state","mapDispatchToProps","$RefreshReg$"],"sources":["/home/mnepraj/my-login-app/src/GoogleLogin.js"],"sourcesContent":["// GoogleLogin.js\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { loginSuccess, loginFailure } from './actions';\n\nconst GoogleLogin = ({ loggedIn, loginSuccess, loginFailure }) => {\n  const onSuccess = (googleUser) => {\n    console.log('Logged in successfully!');\n    const profile = googleUser.getBasicProfile();\n    loginSuccess({\n      id: profile.getId(),\n      name: profile.getName(),\n      email: profile.getEmail(),\n      imageUrl: profile.getImageUrl(),\n    });\n  };\n\n  const onFailure = (error) => {\n    console.log('Login failed:', error);\n    loginFailure(error);\n  };\n\n  const renderButton = () => {\n    if (loggedIn) {\n      return <p>You are already logged in.</p>;\n    } else {\n      window.gapi.signin2.render('my-signin2', {\n        'scope': 'profile email',\n        'width': 200,\n        'height': 50,\n        'longtitle': true,\n        'theme': 'dark',\n        'onsuccess': onSuccess,\n        'onfailure': onFailure\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Google Login Page</h2>\n      {renderButton()}\n      <div id=\"my-signin2\"></div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.loggedIn,\n});\n\nconst mapDispatchToProps = {\n  loginSuccess,\n  loginFailure,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleLogin);\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY,EAAEC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEL,YAAY;EAAEC;AAAa,CAAC,KAAK;EAChE,MAAMK,SAAS,GAAIC,UAAU,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,MAAMC,OAAO,GAAGH,UAAU,CAACI,eAAe,CAAC,CAAC;IAC5CX,YAAY,CAAC;MACXY,EAAE,EAAEF,OAAO,CAACG,KAAK,CAAC,CAAC;MACnBC,IAAI,EAAEJ,OAAO,CAACK,OAAO,CAAC,CAAC;MACvBC,KAAK,EAAEN,OAAO,CAACO,QAAQ,CAAC,CAAC;MACzBC,QAAQ,EAAER,OAAO,CAACS,WAAW,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3Bb,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEY,KAAK,CAAC;IACnCpB,YAAY,CAACoB,KAAK,CAAC;EACrB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIjB,QAAQ,EAAE;MACZ,oBAAOF,OAAA;QAAAoB,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC1C,CAAC,MAAM;MACLC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,YAAY,EAAE;QACvC,OAAO,EAAE,eAAe;QACxB,OAAO,EAAE,GAAG;QACZ,QAAQ,EAAE,EAAE;QACZ,WAAW,EAAE,IAAI;QACjB,OAAO,EAAE,MAAM;QACf,WAAW,EAAEzB,SAAS;QACtB,WAAW,EAAEc;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBL,YAAY,CAAC,CAAC,eACfnB,OAAA;MAAKS,EAAE,EAAC;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACK,EAAA,GAxCI5B,WAAW;AA0CjB,MAAM6B,eAAe,GAAIC,KAAK,KAAM;EAClC7B,QAAQ,EAAE6B,KAAK,CAAC7B;AAClB,CAAC,CAAC;AAEF,MAAM8B,kBAAkB,GAAG;EACzBnC,YAAY;EACZC;AACF,CAAC;AAED,eAAeF,OAAO,CAACkC,eAAe,EAAEE,kBAAkB,CAAC,CAAC/B,WAAW,CAAC;AAAC,IAAA4B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}