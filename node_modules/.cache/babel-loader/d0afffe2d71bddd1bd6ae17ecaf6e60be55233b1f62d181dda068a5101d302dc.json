{"ast":null,"code":"var _jsxFileName = \"/home/mnepraj/loginPage/src/features/Login.js\";\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport { jwtDecode } from 'jwt-decode'; // Import jwt-decode\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  role\n}) => {\n  const responseMessage = response => {\n    const token = response.token; // Assuming the token is available in the response\n    const decodedToken = jwtDecode(token); // Decode the JWT token\n    const {\n      name,\n      email\n    } = decodedToken; // Extract name and email from the decoded token\n    console.log(`${role} Login Success:`, {\n      name,\n      email\n    });\n    // Handle the login response\n  };\n  const errorMessage = error => {\n    console.log(`${role} Login Failed:`, error);\n    // Handle login error\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-container`,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      className: `login-title`,\n      children: [role, \" Login\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onSuccess: responseMessage,\n      onError: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Typography","GoogleLoginButton","jwtDecode","jsxDEV","_jsxDEV","Login","role","responseMessage","response","token","decodedToken","name","email","console","log","errorMessage","error","className","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["/home/mnepraj/loginPage/src/features/Login.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport { jwtDecode } from 'jwt-decode'; // Import jwt-decode\nimport './Login.css';\n\nconst Login = ({ role }) => {\n  const responseMessage = (response) => {\n    const token = response.token; // Assuming the token is available in the response\n    const decodedToken = jwtDecode(token); // Decode the JWT token\n    const { name, email } = decodedToken; // Extract name and email from the decoded token\n    console.log(`${role} Login Success:`, { name, email });\n    // Handle the login response\n  };\n\n  const errorMessage = (error) => {\n    console.log(`${role} Login Failed:`, error);\n    // Handle login error\n  };\n\n  return (\n    <div className={`login-container`}>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom className={`login-title`}>\n        {role} Login\n      </Typography>\n      <GoogleLoginButton onSuccess={responseMessage} onError={errorMessage} />\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,iBAAiB,MAAM,eAAe;AAC7C,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1B,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpC,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK,CAAC,CAAC;IAC9B,MAAMC,YAAY,GAAGR,SAAS,CAACO,KAAK,CAAC,CAAC,CAAC;IACvC,MAAM;MAAEE,IAAI;MAAEC;IAAM,CAAC,GAAGF,YAAY,CAAC,CAAC;IACtCG,OAAO,CAACC,GAAG,CAAE,GAAER,IAAK,iBAAgB,EAAE;MAAEK,IAAI;MAAEC;IAAM,CAAC,CAAC;IACtD;EACF,CAAC;EAED,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC9BH,OAAO,CAACC,GAAG,CAAE,GAAER,IAAK,gBAAe,EAAEU,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAG,iBAAiB;IAAAC,QAAA,gBAChCd,OAAA,CAACJ,UAAU;MAACmB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACJ,SAAS,EAAG,aAAa;MAAAC,QAAA,GAC3EZ,IAAI,EAAC,QACR;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbrB,OAAA,CAACH,iBAAiB;MAACyB,SAAS,EAAEnB,eAAgB;MAACoB,OAAO,EAAEZ;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAAAG,EAAA,GAtBKvB,KAAK;AAwBX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}