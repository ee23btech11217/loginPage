{"ast":null,"code":"var _jsxFileName = \"/home/mnepraj/loginPage/src/features/Login.js\";\nimport React from 'react';\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  role\n}) => {\n  const responseMessage = response => {\n    console.log(`${role} Login Success:`, response);\n    // Handle the login response\n\n    // Access the Google Auth2 instance\n    const auth2 = gapi.auth2.getAuthInstance();\n\n    // Check if the user is signed in\n    if (auth2.isSignedIn.get()) {\n      // Get the user's profile\n      const profile = auth2.currentUser.get().getBasicProfile();\n\n      // Log the user's name and email\n      console.log('Full Name: ' + profile.getName());\n      console.log('Email: ' + profile.getEmail());\n\n      // You can store the name and email in state or perform any other action with the data\n    }\n  };\n  const errorMessage = error => {\n    console.log(`${role} Login Failed:`, error);\n    // Handle login error\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-container`,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h2\",\n      gutterBottom: true,\n      className: `login-title`,\n      children: [role, \" Login\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {\n      onSuccess: responseMessage,\n      onError: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Typography","GoogleLoginButton","jsxDEV","_jsxDEV","Login","role","responseMessage","response","console","log","auth2","gapi","getAuthInstance","isSignedIn","get","profile","currentUser","getBasicProfile","getName","getEmail","errorMessage","error","className","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["/home/mnepraj/loginPage/src/features/Login.js"],"sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\nimport GoogleLoginButton from './googleLogin';\nimport './Login.css';\n\nconst Login = ({ role }) => {\n  const responseMessage = (response) => {\n    console.log(`${role} Login Success:`, response);\n    // Handle the login response\n\n    // Access the Google Auth2 instance\n    const auth2 = gapi.auth2.getAuthInstance();\n\n    // Check if the user is signed in\n    if (auth2.isSignedIn.get()) {\n      // Get the user's profile\n      const profile = auth2.currentUser.get().getBasicProfile();\n\n      // Log the user's name and email\n      console.log('Full Name: ' + profile.getName());\n      console.log('Email: ' + profile.getEmail());\n\n      // You can store the name and email in state or perform any other action with the data\n    }\n  };\n\n  const errorMessage = (error) => {\n    console.log(`${role} Login Failed:`, error);\n    // Handle login error\n  };\n\n  return (\n    <div className={`login-container`}>\n      <Typography variant=\"h4\" component=\"h2\" gutterBottom className={`login-title`}>\n        {role} Login\n      </Typography>\n      <GoogleLoginButton onSuccess={responseMessage} onError={errorMessage} />\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,iBAAiB,MAAM,eAAe;AAC7C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1B,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAE,GAAEJ,IAAK,iBAAgB,EAAEE,QAAQ,CAAC;IAC/C;;IAEA;IACA,MAAMG,KAAK,GAAGC,IAAI,CAACD,KAAK,CAACE,eAAe,CAAC,CAAC;;IAE1C;IACA,IAAIF,KAAK,CAACG,UAAU,CAACC,GAAG,CAAC,CAAC,EAAE;MAC1B;MACA,MAAMC,OAAO,GAAGL,KAAK,CAACM,WAAW,CAACF,GAAG,CAAC,CAAC,CAACG,eAAe,CAAC,CAAC;;MAEzD;MACAT,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGM,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC;MAC9CV,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGM,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC;;MAE3C;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9Bb,OAAO,CAACC,GAAG,CAAE,GAAEJ,IAAK,gBAAe,EAAEgB,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAG,iBAAiB;IAAAC,QAAA,gBAChCpB,OAAA,CAACH,UAAU;MAACwB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACJ,SAAS,EAAG,aAAa;MAAAC,QAAA,GAC3ElB,IAAI,EAAC,QACR;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb3B,OAAA,CAACF,iBAAiB;MAAC8B,SAAS,EAAEzB,eAAgB;MAAC0B,OAAO,EAAEZ;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAAAG,EAAA,GAlCK7B,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}